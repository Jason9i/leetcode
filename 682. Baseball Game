The pop() method takes a single argument (index).
The argument passed to the method is optional. If not passed, the default index -1 is passed as an argument (index of the last item).
If the index passed to the method is not in range, it throws IndexError: pop index out of range exception.

class Solution:
    def calPoints(self, ops: List[str]) -> int:
        score = []
        for op in ops:
            if op.isdigit() or (len(op) >1 and op[1:].isdigit()):
                score.append(int(op))
            
            elif op == 'C':
                score.pop()
            
            elif op == 'D':
                score.append(2*score[-1])
            
            else:
                score.append(score[-2] + score[-1])
        
        return sum(score)

            
class Solution:
    def calPoints(self, ops: List[str]) -> int:
        stack = []
        stack_top = -1
        pointer = 0
        while pointer < len(ops):
            if ops[pointer] == "C":
                stack.pop(-1)
                stack_top-=1
                pointer+=1
            elif ops[pointer] == "+":
                stack.append(int(stack[stack_top])+int(stack[stack_top-1]))
                stack_top+=1
                pointer+=1
            elif ops[pointer] == "D":
                stack.append(2*int(stack[stack_top]))
                stack_top+=1
                pointer+=1
            else:
                stack.append(int(ops[pointer]))
                pointer+=1
                stack_top+=1
            
        return sum(stack)
